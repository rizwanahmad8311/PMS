version: '3.9'

services:
  postgres:
    image: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_PORT=${DB_PORT}
    ports:
      - "5435:5432"
    env_file:
      - .env
    networks:
      - pms-network

  pms_be:
    build:
      context: .
    command: [ "sh", "./script.sh" ]
    container_name: pms-be
    volumes:
      - .:/pms-be
    ports:
      - "8001:8000"
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - pms-network

  minio:
    image: minio/minio
    volumes:
      - s3_data:/data
      - s3_config:/root/.minio
    ports:
      - "9000:9000"
      - "9002:9002"
    env_file:
      - .env
    command: server /data --console-address ":9002"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    networks:
      - pms-network

  create_buckets:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c '
      mc config host add s3 http://minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD --api S3v4;
      if ! mc stat s3/$MINIO_BUCKET &> /dev/null; then
        mc mb s3/$MINIO_BUCKET;
        mc mb s3/$MINIO_BACKUP_BUCKET;
       mc anonymous set public s3/$MINIO_BUCKET;
       mc anonymous set public s3/$MINIO_BACKUP_BUCKET;
      fi;
      exit 0;
      '
    networks:
      - pms-network

networks:
  pms-network:

volumes:
  postgres-data:
  s3_data:
  s3_config:
